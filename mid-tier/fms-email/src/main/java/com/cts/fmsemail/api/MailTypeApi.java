/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.cts.fmsemail.api;

import java.util.Optional;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.fasterxml.jackson.databind.ObjectMapper;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import reactor.core.publisher.Flux;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-04-20T11:50:20.200+05:30")

@Api(value = "{mailType}", description = "the {mailType} API")
public interface MailTypeApi {

    Logger log = LoggerFactory.getLogger(MailTypeApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "", nickname = "mailTypePost", notes = "send email", tags={ "mail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "sent mail successfully"),
        @ApiResponse(code = 404, message = "No DataFound") })
    @RequestMapping(value = "/{eventId}",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default Flux<ResponseEntity<String>> mailTypePost(@ApiParam(value = "",required=true) @PathVariable("eventId") Integer eventId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.info("ObjectMapper or HttpServletRequest not configured in default MailTypeApi interface so no example is generated");
        }
        return Flux.just(new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED));
    }

}
